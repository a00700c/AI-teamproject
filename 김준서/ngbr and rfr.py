# -*- coding: utf-8 -*-
"""NGBR_RFR.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GST32tMZ1g7CI8aAXJ7QtOfyTW_sAKBt
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)
from sklearn.model_selection import cross_val_score, train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, mean_absolute_error
# %pip install --upgrade ngboost
from ngboost import NGBRegressor
#같은 경로에 모든 데이터파일이 있다고 가정

df = pd.read_csv('boston.csv')

df.shape

#데이터 전처리
X = df.drop(columns=['MEDV'], axis=1)
X.head()

#결과값
y = df['MEDV']
y.head()

X_train, X_test, y_train, y_test = train_test_split(X, y,train_size=0.8,random_state=7)

ngb = NGBRegressor().fit(X_train, y_train)
y_preds = ngb.predict(X_test)
y_dists = ngb.pred_dist(X_test)

# test Mean Squared Error
test_MSE = np.sqrt(mean_squared_error(y_preds, y_test))
test_MAE = mean_absolute_error(y_preds, y_test)
print('Test RMSE', test_MSE)
print('Test MAE', test_MAE)

from sklearn.ensemble import RandomForestRegressor
model_rf = RandomForestRegressor()
model_rf.fit(X_train, y_train)
pred_rf = model_rf.predict(X_test)
mae_rf = np.sqrt(mean_squared_error(y_test, pred_rf))
test_MAE = mean_absolute_error(y_test, pred_rf)
print('Test RMSE', mae_rf)
print('Test MAE', test_MAE)

#콘크리트 파일
df = pd.read_csv('Concrete_Data_Yeh.csv')
df.columns = ['cement', 'slag', 'ash', 'water', 'splast', 'coarse', 'fine', 'age', 'strength']
# Extract the X and y data from the DataFrame 
X = df.drop('strength', axis=1)
y = df['strength']

# Create the train and test data 
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=7)

X.head()
y.head()

ngb = NGBRegressor().fit(X_train, y_train)
y_preds = ngb.predict(X_test)
y_dists = ngb.pred_dist(X_test)

# test Mean Squared Error
test_MSE = np.sqrt(mean_squared_error(y_preds, y_test))
test_MAE = mean_absolute_error(y_preds, y_test)
print('Test RMSE', test_MSE)
print('Test MAE', test_MAE)

model_rf = RandomForestRegressor()
model_rf.fit(X_train, y_train)
pred_rf = model_rf.predict(X_test)
mae_rf = np.sqrt(mean_squared_error(y_test, pred_rf))
test_MAE = mean_absolute_error(y_test, pred_rf)
print('Test RMSE', mae_rf)
print('Test MAE', test_MAE)

#보험
data = pd.read_csv('insurance.csv')

from sklearn.preprocessing import LabelEncoder
#sex
le = LabelEncoder()
le.fit(data.sex.drop_duplicates()) 
data.sex = le.transform(data.sex)
# smoker or not
le.fit(data.smoker.drop_duplicates()) 
data.smoker = le.transform(data.smoker)
#region
le.fit(data.region.drop_duplicates()) 
data.region = le.transform(data.region)

data.head()

#데이터 전처리
X = data.drop(['charges'], axis = 1)
y = data.charges

X_train,X_test,y_train,y_test = train_test_split(X,y, random_state = 7)

ngb = NGBRegressor().fit(X_train, y_train)
y_preds = ngb.predict(X_test)
y_dists = ngb.pred_dist(X_test)

# test Mean Squared Error
test_MSE = np.sqrt(mean_squared_error(y_preds, y_test))
test_MAE = mean_absolute_error(y_preds, y_test)
print('Test RMSE', test_MSE)
print('Test MAE', test_MAE)

model_rf = RandomForestRegressor()
model_rf.fit(X_train, y_train)
pred_rf = model_rf.predict(X_test)
mae_rf = np.sqrt(mean_squared_error(y_test, pred_rf))
test_MAE = mean_absolute_error(y_test, pred_rf)
print('Test RMSE', mae_rf)
print('Test MAE', test_MAE)

